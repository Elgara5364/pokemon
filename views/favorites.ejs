<!-- views/favorites.ejs -->
<!DOCTYPE html>
<html>
<head>
  <title>Pokemon Favorit</title>
  <script src="https://cdn.tailwindcss.com"></script>

  <style>
    .pokemon-card {
      border: 1px solid #ddd;
      padding: 10px;
      margin: 10px;
      border-radius: 8px;
      display: inline-block;
      width: 200px;
    }
    .favorite-button {
      background-color: #ff4d4d;
      color: white;
      border: none;
      padding: 5px 10px;
      border-radius: 4px;
      cursor: pointer;
    }
  </style>
</head>
<body class="max-w-6xl mx-auto p-8">

  <%
  // Function to get gradient colors based on Pokémon type
  function getTypeGradient(type) {
    const typeColors = {
      normal: 'from-gray-400 to-gray-500',
      fire: 'from-red-500 to-orange-500',
      water: 'from-blue-500 to-blue-600',
      grass: 'from-green-500 to-green-600',
      electric: 'from-yellow-400 to-yellow-500',
      ice: 'from-blue-200 to-blue-400',
      fighting: 'from-red-700 to-red-800',
      poison: 'from-purple-500 to-purple-600',
      ground: 'from-yellow-600 to-yellow-700',
      flying: 'from-indigo-300 to-indigo-400',
      psychic: 'from-pink-500 to-pink-600',
      bug: 'from-green-600 to-green-700',
      rock: 'from-yellow-800 to-yellow-900',
      ghost: 'from-purple-700 to-purple-800',
      dark: 'from-gray-800 to-gray-900',
      dragon: 'from-indigo-700 to-indigo-800',
      steel: 'from-gray-500 to-gray-600',
      fairy: 'from-pink-300 to-pink-400'
    };
    
    return typeColors[type] || 'from-indigo-500 to-purple-600';
    }
  %>

  <div class="flex justify-between mb-8">
    <h1 class="text-4xl font-bold text-indigo-800"><a href="/">Pokemon Explorer</a></h1>
    <button id="goBack" type="button"  class="px-6 py-3 bg-indigo-600 text-white font-medium rounded-lg hover:bg-indigo-700 transition-colors shadow-sm" >Kembali</button>
  </div>

    <% if(favorites.length == 0 ) { %>
      <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 rounded mb-8 max-w-xl mx-auto">
        <div class="flex">
          <div class="flex-shrink-0">
            <!-- Error icon -->
            <svg class="h-5 w-5 text-red-500" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"/>
            </svg>
          </div>
          <div class="ml-3">
            <p class="text-sm">Pokemon favorite is empty</p>
          </div>
        </div>
      </div>
    <% } %>

    <div class="pokemon-list ">

    <% if (favorites) { %>
      <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 ">
      <% favorites.forEach(pokemon => { %>
        <div class="flex flex-col bg-gray-200 p-6  shadow-lg rounded-lg" id="fav-<%= pokemon.pokemonId %>">
          <div class="flex justify-between" >
            <p class="text-lg font-bold">#<%= pokemon.pokemonId.toString().padStart(4, '0') %>
            </p>
            <input type="hidden" name="pokemonId" value="<%= pokemon.pokemonId %>">
            <button type="button" class="favorite-btn" data-id="<%= pokemon.pokemonId %> ">
              ❤️
            </button>
          </div>
          <a href="/get-pokemon/<%= pokemon.pokemonId %>" class="flex flex-col text-center transition-transform transform hover:scale-105" onclick="updatePath()">
            <img src="<%= pokemon.imgPokemon %>" alt="<%= pokemon.name %>" class="mx-auto mb-2 ">
            <h3 class="text-2xl font-semibold mb-3"><%= pokemon.pokemonName %></h3>
            <div class="flex justify-center gap-2">
              <% pokemon.pokemonTypes.map(type => { %>
                <span class="px-3 py-1 bg-opacity-30 rounded-full text-sm font-medium capitalize flex gap-2 bg-gradient-to-r <%= getTypeGradient(type) %>">
                  <%= type %>
                </span>
              <% }); %>
            </div>
          </a>
        </div>
        <% }) %>
      </div>
    <% } %>
  </div>

 

  <script>
    // update last page
    function updatePath(){
      const fullPath = window.location.pathname + window.location.search;
      localStorage.setItem('lastPagePath', fullPath);
    }

    // back to page before favorite page or last home page
    document.getElementById('goBack').addEventListener('click', function () {
      const path = localStorage.getItem('lastHomePagePath') || '/';
      window.location.href = path;
    });
    document.querySelector(".grid").addEventListener("click", async (event) => {
      let favorites = JSON.parse(localStorage.getItem("favorites") || "[]");

      if (event.target.classList.contains("favorite-btn")) {
        const pokemonId = event.target.dataset.id
        const updatedFavPokemon = favorites.filter((item, idx) => {
          return (parseInt(item.pokemonId) !== parseInt(pokemonId))
          
        })
        localStorage.setItem('favorites', JSON.stringify(updatedFavPokemon));
    
        const el = document.getElementById(`fav-${parseInt(pokemonId)}`);
        if (el) el.remove();
      }
  });

  </script>
</body>
</html>